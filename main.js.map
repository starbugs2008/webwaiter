{"version":3,"sources":["webpack:///./projects/jsonformlib/src/lib/Interface/index.ts","webpack:///./projects/jsonformlib/src/lib/components/actions/actions.component.css","webpack:///./projects/jsonformlib/src/lib/components/actions/actions.component.html","webpack:///./projects/jsonformlib/src/lib/components/actions/actions.component.ts","webpack:///./projects/jsonformlib/src/lib/components/case/case.component.html","webpack:///./projects/jsonformlib/src/lib/components/case/case.component.scss","webpack:///./projects/jsonformlib/src/lib/components/case/case.component.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/FieldArray/MyFieldArray.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/FieldArray/MyFieldArray.fieldtype.scss","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/FieldArray/MyFieldArray.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/code/code.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/code/code.fieldtype.scss","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/code/code.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/expandable/expandable.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/expandable/expandable.fieldtype.scss","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/expandable/expandable.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/html/html.fieldtype.css","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/html/html.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/html/html.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/index.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/menu/menu.fieldtype.css","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/menu/menu.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/menu/menu.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/readonly/readonly.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/readonly/readonly.fieldtype.scss","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/readonly/readonly.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/repeat/repeat.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/repeat/repeat.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/table/table.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/table/table.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/title/title.fieldtype.css","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/title/title.fieldtype.html","webpack:///./projects/jsonformlib/src/lib/components/fieldtypes/title/title.fieldtype.ts","webpack:///./projects/jsonformlib/src/lib/components/index.ts","webpack:///./projects/jsonformlib/src/lib/components/pages/page/form/form.component.html","webpack:///./projects/jsonformlib/src/lib/components/pages/page/form/form.component.scss","webpack:///./projects/jsonformlib/src/lib/components/pages/page/form/form.component.ts","webpack:///./projects/jsonformlib/src/lib/components/pages/page/page.component.css","webpack:///./projects/jsonformlib/src/lib/components/pages/page/page.component.html","webpack:///./projects/jsonformlib/src/lib/components/pages/page/page.component.ts","webpack:///./projects/jsonformlib/src/lib/components/pages/page/tabs-section/tabs-section.component.css","webpack:///./projects/jsonformlib/src/lib/components/pages/page/tabs-section/tabs-section.component.html","webpack:///./projects/jsonformlib/src/lib/components/pages/page/tabs-section/tabs-section.component.ts","webpack:///./projects/jsonformlib/src/lib/components/pages/pages.component.css","webpack:///./projects/jsonformlib/src/lib/components/pages/pages.component.html","webpack:///./projects/jsonformlib/src/lib/components/pages/pages.component.ts","webpack:///./projects/jsonformlib/src/lib/jsonform.module.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/actions/bt.actions.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/actions/page.actions.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/effects/bt.effects.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/ngrxcore.module.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/reducers/bt.reducer.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/reducers/index.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/reducers/page.reduce.ts","webpack:///./projects/jsonformlib/src/lib/ngrxcore/services/bt.service.ts","webpack:///./projects/jsonformlib/src/lib/pipes/dataformat.pipe.ts","webpack:///./projects/jsonformlib/src/lib/pipes/myJson.pipe.ts","webpack:///./projects/jsonformlib/src/lib/pipes/pre-define.pipe.ts","webpack:///./projects/jsonformlib/src/lib/services/appIndex.service.ts","webpack:///./projects/jsonformlib/src/lib/services/data.service.ts","webpack:///./projects/jsonformlib/src/lib/services/field.service.ts","webpack:///./projects/jsonformlib/src/lib/services/form.service.ts","webpack:///./projects/jsonformlib/src/lib/services/index.ts","webpack:///./projects/jsonformlib/src/lib/services/page.service.ts","webpack:///./projects/jsonformlib/src/lib/shared.module.ts","webpack:///./projects/jsonformlib/src/public_api.ts","webpack:///./restaurant/$_lazy_route_resource lazy namespace object","webpack:///./restaurant/app/Routes.ts","webpack:///./restaurant/app/app.component.css","webpack:///./restaurant/app/app.component.html","webpack:///./restaurant/app/app.component.ts","webpack:///./restaurant/app/app.module.ts","webpack:///./restaurant/app/services/auth-guard.service.ts","webpack:///./restaurant/app/services/auth.service.ts","webpack:///./restaurant/app/services/mybt.service.ts","webpack:///./restaurant/app/services/user.service.ts","webpack:///./restaurant/app/services/validation.service.ts","webpack:///./restaurant/environments/environment.ts","webpack:///./restaurant/main.ts","webpack:///./spa/environments/environment.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export { IDynamicField } from \"./Def/IDynamicField\";\r\nexport { IDefCase } from \"./Def/IDefCase\";\r\nexport { IDefForm } from \"./Def/IDefForm\";\r\nexport { IDefAppIndex } from \"./Def/IDefAppIndex\";\r\nexport { IActionProcess } from \"./IActionProcess\";\r\nimport { InjectionToken } from \"@angular/core\";\r\nexport const FIELD_VALIDATION = new InjectionToken<string[]>(\r\n  \"FIELD_VALIDATION\"\r\n);\r\n","module.exports = \"\"","module.exports = \"<div class='row'>\\n    <div *ngFor=\\\"let b of actions\\\" class=\\\"col-md-2\\\">\\n        <div [ngSwitch]=\\\"b\\\">\\n            <div *ngSwitchCase=\\\"'Reset'\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Reset</button>\\n            </div>\\n            <div *ngSwitchDefault>\\n                <button (click)=\\\"btAction(b)\\\" class=\\\"btn btn-primary\\\" [id]='b.id' [disabled]= 'disabled(b)' >\\n                    {{b.label}}\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n<!-- [disabled]=\\\"!valid\\\"  -->\"","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { IDefAction } from \"../../Interface/Def/IDefAction\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { BTAction } from \"../../ngrxcore/actions/bt.actions\";\r\nimport { State } from \"../../ngrxcore/reducers\";\r\nimport { PageService } from \"../../services/page.service\";\r\n\r\n@Component({\r\n  selector: \"json-actions\",\r\n  templateUrl: \"./actions.component.html\",\r\n  styleUrls: [\"./actions.component.css\"]\r\n})\r\nexport class ActionsComponent implements OnInit {\r\n  @Input()\r\n  actions: Array<IDefAction>;\r\n  @Input()\r\n  options: Array<any>;\r\n  @Input()\r\n  valid: boolean;\r\n  constructor(private store: Store<State>, private pageservice: PageService) {\r\n    this.valid = true;\r\n  }\r\n  ngOnInit() {}\r\n\r\n  btAction(event: any) {\r\n    if (!event.id) {\r\n      return;\r\n    }\r\n    this.store.dispatch(\r\n      new BTAction({\r\n        action: event,\r\n        model: this.pageservice.CurrentModel\r\n      })\r\n    );\r\n  }\r\n\r\n  disabled(action: IDefAction): boolean {\r\n    // if (!action.hideExpression) return true;\r\n    // const x = this.valid && evalHidden(action.hideExpression) ? true : false;\r\n    // return !x;\r\n\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"defCase; then page; else nopage\\\">\\r\\n</ng-container>\\r\\n<ng-template #nopage>\\r\\n  <div>\\r\\n    page is not set up\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-template #page>\\r\\n  <div *ngFor=\\\"let page of defCase.pages  let i = index\\\" [class]='page.className'>\\r\\n    <json-page [page]='page'></json-page>\\r\\n  </div>\\r\\n  <div [class]='defCase.groupClass'>\\r\\n    <div *ngFor=\\\"let page of defCase.group  let i = index\\\" [class]='page.className'>\\r\\n      <json-page [page]='page'></json-page>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\"","module.exports = \".panel {\\n  margin: 10px; }\\n\\n.formborder {\\n  border: 1px solid black;\\n  margin: 5px; }\\n\\n.title {\\n  flex: 1 1 auto;\\n  text-align: center;\\n  font-weight: 700;\\n  font-size: 20px; }\\n\"","import { PageService } from \"../../services/page.service\";\r\nimport { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n@Component({\r\n  selector: \"json-case\",\r\n  templateUrl: \"./case.component.html\",\r\n  styleUrls: [\"./case.component.scss\"]\r\n})\r\nexport class CaseComponent {\r\n  actionLib: any[] = [];\r\n  constructor(\r\n    private router: ActivatedRoute,\r\n    private pageService: PageService\r\n  ) {\r\n    this.router.url.subscribe(url => {\r\n      this.pageService.CurrentPage = null;\r\n      if (url.length > 1) {\r\n        this.pageService.LoadCase(url[0].path, url[1].path).subscribe(c => {\r\n          if(c[0])\r\n          {\r\n            this.pageService.CurrentPage = {\r\n              defCase: c[0],\r\n              model: c[1],\r\n              src: \"CaseComponent\"\r\n            };\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  get defCase() {\r\n    return this.pageService._currentPage\r\n      ? this.pageService._currentPage.defCase\r\n      : null;\r\n  }\r\n}\r\n","module.exports = \"<div [class]=\\\"field.fieldArray.fieldGroupClassName\\\">\\r\\n    <div *ngFor=\\\"let m of model ; let i = index;\\\" class=\\\"row\\\">\\r\\n        <div *ngFor=\\\"let group of field.fieldGroup[i].fieldGroup \\\">\\r\\n            {{m |json}}\\r\\n            <formly-group [model]=\\\"m\\\" [field]=\\\"group\\\" [options]=\\\"options\\\" [form]=\\\"formControl\\\">\\r\\n            </formly-group>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".grid-container {\\n  font-size: 12px;\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1fr 1fr;\\n      grid-template-columns: 1fr 1fr; }\\n\"","import { BTState } from '../../../ngrxcore/reducers/bt.reducer';\r\nimport { Component, OnChanges } from \"@angular/core\";\r\nimport { FieldArrayType, FormlyFormBuilder } from \"@ngx-formly/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { State } from \"../../../ngrxcore/reducers\";\r\n@Component({\r\n  templateUrl: \"./MyFieldArray.fieldtype.html\",\r\n  styleUrls: [\"./MyFieldArray.fieldtype.scss\"]\r\n})\r\nexport class MyFieldArrayFieldtype extends FieldArrayType implements OnChanges {\r\n  constructor(builder: FormlyFormBuilder, private store: Store<State>) {\r\n    super(builder);\r\n    // this.store.select(s => s.button).subscribe((c: BTState) => {\r\n    //   switch (c.id) {\r\n    //     case \"myorder\":\r\n    //       c.model[\"Food\"] = c.model.title;\r\n    //       c.model[\"Qty\"] = 1;\r\n    //       this.add(this.model.length, c.model);\r\n    //       break;\r\n    //   }\r\n    // });\r\n  }\r\n  ngOnChanges(change) {\r\n    console.log(change);\r\n  }\r\n}\r\n","module.exports = \"<pre><code>{{Code}}</code></pre>\"","module.exports = \"\"","import { Component } from \"@angular/core\";\nimport { FieldType } from \"@ngx-formly/core\";\n\n@Component({\n  templateUrl: \"./code.fieldtype.html\",\n  styleUrls: [\"./code.fieldtype.scss\"]\n})\nexport class CodeFieldType extends FieldType {\n\n  get Code(): string {\n    return JSON.stringify(this.field.templateOptions.label,null, 2)\n  }\n}\n","module.exports = \"<json-form [formData]='Value.header'></json-form>\\r\\n<div [@changeState]=\\\"currentState\\\">\\r\\n    <json-page [page]=\\\"Value.detail\\\"></json-page>\\r\\n</div>\"","module.exports = \"div label input {\\n  margin-right: 100px; }\\n\\nbody {\\n  font-family: sans-serif; }\\n\\n#ck-button {\\n  margin: 4px;\\n  background-color: #EFEFEF;\\n  border-radius: 4px;\\n  border: 1px solid #D0D0D0;\\n  overflow: auto;\\n  float: left; }\\n\\n#ck-button label {\\n  float: left;\\n  width: 2.0em; }\\n\\n#ck-button label span {\\n  text-align: center;\\n  padding: 3px 0px;\\n  display: block; }\\n\\n#ck-button label input {\\n  position: absolute;\\n  top: -20px; }\\n\\n#ck-button input:checked + span {\\n  background-color: #999;\\n  color: #fff; }\\n\\n.myblock {\\n  background-color: green;\\n  width: 300px;\\n  height: 250px;\\n  border-radius: 5px;\\n  margin: 5rem; }\\n\"","import { Component, OnInit, Input, HostListener } from \"@angular/core\";\nimport { FieldType } from \"@ngx-formly/core\";\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from \"@angular/animations\";\nimport { timer } from \"rxjs\";\n\n@Component({\n  templateUrl: \"./expandable.fieldtype.html\",\n  styleUrls: [\"./expandable.fieldtype.scss\"],\n  animations: [\n    trigger(\"changeState\", [\n      state(\n        \"show\",\n        style({\n          display: \"block\",\n          transform: \"scale(1)\"\n        })\n      ),\n      state(\n        \"hidden\",\n        style({\n          display: \"none\",\n          transform: \"scale(0)\"\n        })\n      ),\n      transition(\"*=>show\", animate(\"100ms\")),\n      transition(\"*=>hidden\", animate(\"0ms\"))\n    ])\n  ]\n})\nexport class ExpandableFieldType extends FieldType implements OnInit {\n  currentState = \"hidden\";\n  ngOnInit() {}\n  @HostListener(\"mouseenter\")\n  mouseenter() {\n    this.currentState = \"show\";\n  }\n  @HostListener(\"mouseleave\")\n  mouseleave() {\n    this.currentState = \"hidden\";\n  }\n  get Value() {\n    return this.field.defaultValue || {};\n  }\n}\n","module.exports = \".bold {\\r\\n  font-weight: bold;\\r\\n \\r\\n}\\r\\n.firstField{\\r\\n  margin-left: 25px;\\r\\n  margin-right: 15px;\\r\\n  width: 20%;\\r\\n}\\r\\n.background {\\r\\n  margin: 25px 0;\\r\\n}\\r\\nimg {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\"","module.exports = \"\\r\\n  <div *ngFor=\\\"let row of model[field.key].Rows\\\" [class]=\\\" field.className\\\">\\r\\n    <div *ngFor=\\\"let cell of row\\\">\\r\\n      <span [ngClass]='cell.className'> {{cell.defaultValue}}</span><br/>\\r\\n      <img [src]=\\\"cell.image\\\"  width='30%' alt=\\\"Photo\\\"  *ngIf='cell.image'>\\r\\n    </div>\\r\\n  </div>\"","import { Component} from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  templateUrl: './html.fieldtype.html',\r\n  styleUrls: ['./html.fieldtype.css']\r\n})\r\nexport class HtmlFieldType extends FieldType {\r\n}\r\n","import { FieldArrayType } from '@ngx-formly/core';\r\nimport { HtmlFieldType } from \"./html/html.fieldtype\";\r\nimport { RepeatFieldType } from \"./repeat/repeat.fieldtype\";\r\nimport { ReadOnlyFieldType } from \"./readonly/readonly.fieldtype\";\r\nimport { MenuFieldType } from \"./menu/menu.fieldtype\";\r\nimport { TitleFieldType } from \"./title/title.fieldtype\";\r\nimport { ExpandableFieldType } from \"./expandable/expandable.fieldtype\";\r\nimport { MyFieldArrayFieldtype } from './FieldArray/MyFieldArray.fieldtype';\r\nimport { CodeFieldType } from './code/code.fieldtype';\r\nimport { TableFieldType } from './table/table.fieldtype';\r\n\r\nexport const field_types = [\r\n  HtmlFieldType,\r\n  RepeatFieldType,\r\n  ExpandableFieldType,\r\n  ReadOnlyFieldType,\r\n  TitleFieldType,\r\n  MenuFieldType,\r\n  MyFieldArrayFieldtype,\r\n  CodeFieldType,\r\n  TableFieldType\r\n];\r\n\r\nexport const FIELD_TYPES = [\r\n  { name: \"repeat\", component: RepeatFieldType },\r\n  {\r\n    name: \"expandable\",\r\n    component: ExpandableFieldType\r\n  },\r\n  {\r\n    name: \"FieldArray\",\r\n    component: MyFieldArrayFieldtype\r\n  },\r\n  {\r\n    name: \"readonly\",\r\n    component: ReadOnlyFieldType\r\n  },\r\n  {\r\n    name: \"html\",\r\n    component: HtmlFieldType\r\n  },\r\n  {\r\n    name: \"info\",\r\n    component: TitleFieldType\r\n  },\r\n  {\r\n    name: \"headline\",\r\n    component: TitleFieldType\r\n  },\r\n  {\r\n    name: \"code\",\r\n    component: CodeFieldType\r\n  },\r\n  {\r\n    name: \"table\",\r\n    component: TableFieldType\r\n  },\r\n  {\r\n    name: \"menu\",\r\n    component: MenuFieldType\r\n  }\r\n];\r\n","module.exports = \".level1 {\\r\\n  padding-left: 10px;\\r\\n  font-weight: 500;\\r\\n  text-align: left;\\r\\n}\\r\\n.level0 {\\r\\n  padding-left: 2px;\\r\\n  font-weight: 700;\\r\\n  text-align: left;\\r\\n}\\r\\n.hidden {\\r\\n  display: none !important;\\r\\n}\\r\\n\"","module.exports = \"<div *ngFor=\\\"let link of this.service.Menus$ |async\\\">\\r\\n  <div mat-list-item>\\r\\n    <a [routerLink]=\\\"[link.path]\\\" routerLinkActive=\\\"active-link\\\" *ngIf='link'>\\r\\n      <span [class]='link.level' *ngIf='link'> {{link.label}} </span>\\r\\n    </a>\\r\\n    <i class=\\\"fas fa-edit\\\" (click)='onedit(link.path)' *ngIf=\\\"service.appIndex.FormBuilder\\\"></i>\\r\\n  </div>\\r\\n</div>\"","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AppIndexService } from \"../../../services/appIndex.service\";\nimport { FieldType } from \"@ngx-formly/core\";\n@Component({\n  selector: \"json-menu\",\n  templateUrl: \"./menu.fieldtype.html\",\n  styleUrls: [\"./menu.fieldtype.css\"]\n})\nexport class MenuFieldType extends FieldType {\n  // editicon = faPen;\n  constructor(public service: AppIndexService,  private router: Router) {\n    super();\n  }\n  onedit(path) {\n    this.router.navigate([ this.service.appIndex.FormBuilder, path]);\n  }\n  get Menu$(){\n    return this.service.Menus$;\n  }\n}\n","module.exports = \"\\r\\n<div [ngClass]=\\\"field.className\\\">\\r\\n    {{field.templateOptions.label}} {{model[field.key]}}\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component } from \"@angular/core\";\nimport { FieldType } from \"@ngx-formly/core\";\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from \"@angular/animations\";\n\n@Component({\n  templateUrl: \"./readonly.fieldtype.html\",\n  styleUrls: [\"./readonly.fieldtype.scss\"]\n})\nexport class ReadOnlyFieldType extends FieldType {\n\n}\n","module.exports = \"<div>\\r\\n    <div *ngFor=\\\"let m of model ; let i = index;\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-11\\\">\\r\\n            <div *ngFor=\\\"let group of field.fieldGroup[i].fieldGroup \\\">\\r\\n                <formly-group [model]=\\\"m\\\" [field]=\\\"group\\\" [options]=\\\"options\\\" [form]=\\\"formControl\\\">\\r\\n                </formly-group>\\r\\n            </div>\\r\\n            <json-actions [actions]=' field.fieldGroup.actions'></json-actions>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\" *ngIf='!m.Keep'>\\r\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"remove(i)\\\">x</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<hr />\\r\\n<div style=\\\"margin:30px 0;\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"add()\\\">+</button>\\r\\n</div>\"","import { BTState } from \"../../../ngrxcore/reducers/bt.reducer\";\r\nimport { Component, OnChanges } from \"@angular/core\";\r\nimport { FieldArrayType, FormlyFormBuilder } from \"@ngx-formly/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { State } from \"../../../ngrxcore/reducers\";\r\n@Component({\r\n  templateUrl: \"./repeat.fieldtype.html\"\r\n})\r\nexport class RepeatFieldType extends FieldArrayType implements OnChanges {\r\n  constructor(builder: FormlyFormBuilder, private store: Store<State>) {\r\n    super(builder);\r\n    this.store.select(s => s.button).subscribe((c: BTState) => {\r\n      switch (c.id) {\r\n        case \"myorder\":\r\n          c.model[\"Food\"] = c.model.title;\r\n          c.model[\"Qty\"] = 1;\r\n          this.add(this.model.length, c.model);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  ngOnChanges(change) {\r\n    console.log(change);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let header of headers \\\" class=\\\"col-md-2\\\">\\r\\n       <div class='formtitle'> {{header}}</div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngFor=\\\"let m of model ; let i = index;\\\" class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let header of headers\\\"class=\\\"col-md-2\\\">\\r\\n        {{m[header]}}\\r\\n    </div>\\r\\n    <json-actions [actions]=' field.fieldGroup.actions'></json-actions>\\r\\n</div>\\r\\n<hr />\"","import { BTState } from \"../../../ngrxcore/reducers/bt.reducer\";\r\nimport { Component, OnChanges } from \"@angular/core\";\r\nimport { FieldArrayType, FormlyFormBuilder } from \"@ngx-formly/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { State } from \"../../../ngrxcore/reducers\";\r\n@Component({\r\n  templateUrl: \"./table.fieldtype.html\"\r\n})\r\nexport class TableFieldType extends FieldArrayType implements OnChanges {\r\n  constructor(builder: FormlyFormBuilder, private store: Store<State>) {\r\n    super(builder);\r\n    this.store.select(s => s.button).subscribe((c: BTState) => {\r\n      switch (c.id) {\r\n        case \"myorder\":\r\n          c.model[\"Food\"] = c.model.title;\r\n          c.model[\"Qty\"] = 1;\r\n          this.add(this.model.length, c.model);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  ngOnChanges(change) {\r\n    console.log(change);\r\n  }\r\n\r\n  get headers(): string[] {\r\n    const x: any = this.field.fieldGroup[0];\r\n    return x.Rows[0].map(c => c.label);\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-toolbar {\\r\\n  flex: 1 1 auto;\\r\\n  justify-content: center;\\r\\n  font-weight: 700;\\r\\n  font-size: 24px;\\r\\n  font-family: \\\"Times New Roman\\\", Times, serif;\\r\\n}\\r\\n\"","module.exports = \"<div [class]='field.className'>{{field.templateOptions.label}}</div>\"","import { Component } from \"@angular/core\";\nimport { FieldType } from \"@ngx-formly/core\";\n\n@Component({\n  templateUrl: \"./title.fieldtype.html\",\n  styleUrls: [\"./title.fieldtype.css\"]\n})\nexport class TitleFieldType extends FieldType {\n\n}\n","import { FormComponent } from \"./pages/page/form/form.component\";\r\nimport { ActionsComponent } from \"./actions/actions.component\";\r\nimport { TabsSectionComponent } from \"./pages/page/tabs-section/tabs-section.component\";\r\nimport { CaseComponent } from \"./case/case.component\";\r\nimport { PageComponent } from \"./pages/page/page.component\";\r\nimport { PagesComponent } from \"./pages/pages.component\";\r\n\r\nexport const components = [\r\n  FormComponent,\r\n  ActionsComponent,\r\n  TabsSectionComponent,\r\n  CaseComponent,\r\n  PageComponent,\r\n  PagesComponent,\r\n];\r\n","module.exports = \"<div *ngIf='display' [class]='className'>\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [form]=\\\"form\\\"></formly-form>\\r\\n  <ng-content></ng-content>\\r\\n  <json-actions [actions]='formData.actions'></json-actions>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"form {\\n  margin: 10px; }\\n\\ntextarea {\\n  width: 100%; }\\n\\n.formboarder {\\n  border: 1px solid #999999 !important;\\n  margin: 5px 0; }\\n\\nb {\\n  padding: 5px; }\\n\\n.level1 {\\n  margin-left: 450px;\\n  padding-left: 450px;\\n  background-color: red;\\n  font-weight: 100;\\n  font-size: 8pt; }\\n\"","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  FormService,\r\n  AppIndexService,\r\n  PageService\r\n} from \"../../../../services\";\r\nimport { IDefForm } from \"../../../../Interface\";\r\n@Component({\r\n  selector: \"json-form\",\r\n  templateUrl: \"./form.component.html\",\r\n  styleUrls: [\"./form.component.scss\"]\r\n})\r\nexport class FormComponent implements OnChanges {\r\n  @Input()\r\n  formData: IDefForm;\r\n  @Input()\r\n  form: FormGroup = new FormGroup({});\r\n  @Output()\r\n  btclick: EventEmitter<any> = new EventEmitter<any>();\r\n  model: any;\r\n  fields: Array<any>;\r\n  constructor(private formService: FormService, private service: PageService) {}\r\n  get className(): string {\r\n    return this.formData.className || \"formboarder\";\r\n  }\r\n  get display(): boolean {\r\n    return this.service.display(this.formData);\r\n  }\r\n  ngOnChanges(change: SimpleChanges) {\r\n    this.model = this.service.CurrentModel;\r\n    if (this.formData) {\r\n      this.formService\r\n        .RowsMaptoFields(this.formData.Rows, this.model)\r\n        .subscribe(fields => (this.fields = fields));\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \" <div *ngIf=\\\"service.display(page)\\\">\\r\\n  <div [ngSwitch]=\\\"page.type\\\">\\r\\n    <div *ngSwitchCase=\\\"SupportTypes.pages\\\">\\r\\n      <json-pages [pages]='page'>\\r\\n      </json-pages>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"SupportTypes.Form\\\">\\r\\n      <json-form [formData]='page'>\\r\\n      </json-form>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"SupportTypes.tabgroup\\\">\\r\\n      <json-tabs-section [sections]='page.sections'></json-tabs-section>\\r\\n    </div>\\r\\n    <div *ngSwitchDefault>\\r\\n      <div class=\\\"alert alert-dange\\\">\\r\\n        The \\\"{{page.type}}\\\" is not supported\\r\\n      </div>\\r\\n      <div>It only supports <b>{{ElementTypes}} </b></div>\\r\\n      <br />\\r\\n      Page Define {{page | json}}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, Input } from \"@angular/core\";\nimport { PageService } from \"../../../services\";\n\nexport const supports = {\n  Form: \"form\",\n  tabgroup: \"tabgroup\",\n  pages: \"pages\"\n};\n@Component({\n  selector: \"json-page\",\n  templateUrl: \"./page.component.html\",\n  styleUrls: [\"./page.component.css\"]\n})\nexport class PageComponent {\n  SupportTypes: any = supports;\n  @Input() page: any;\n  constructor(public service: PageService) {}\n  get ElementTypes() {\n    const x = JSON.stringify(Object.values(this.SupportTypes));\n    return x\n      .replace(/\"/g, \"\")\n      .replace(\"[\", \"\")\n      .replace(\"]\", \"\");\n  }\n}\n","module.exports = \"/deep/ .mat-tab-label{\\r\\n    color:white;\\r\\n    font-weight: 700;\\r\\n    background-color: #6b1c89;\\r\\n    font-size: 14px;\\r\\n    margin: 2px;\\r\\n}\\r\\n/deep/.mat-tab-label-active {\\r\\n    background-color:#17527c !important;\\r\\n} \"","module.exports = \"<mat-tab-group>\\n    <mat-tab *ngFor=\\\"let section of sections; let index = index;\\\" [label]='section.title' class='tabColor'>\\n         <json-pages [pages]='section'></json-pages> \\n        <!-- <json-actions [actions]='section.actions'></json-actions> -->\\n    </mat-tab>\\n</mat-tab-group>\"","import { Component, Input, OnChanges } from \"@angular/core\";\n\n@Component({\n  selector: \"json-tabs-section\",\n  templateUrl: \"./tabs-section.component.html\",\n  styleUrls: [\"./tabs-section.component.css\"]\n})\nexport class TabsSectionComponent implements OnChanges {\n  @Input() sections: any[]; // formgrouple\n  constructor() {}\n  ngOnChanges() {\n  }\n  formAction(event) {\n    console.log(\"eventcls:\", event);\n\n  }\n}\n","module.exports = \"\\r\\n.bold {\\r\\n  font-weight: 800;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div *ngFor=\\\"let page of pages.pages  let i = index\\\" [class]='page.className'>\\r\\n <json-page [page]= 'page'></json-page>\\r\\n</div>\\r\\n\\r\\n<json-actions [actions]='pages.actions'></json-actions>\"","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"json-pages\",\n  templateUrl: \"./pages.component.html\",\n  styleUrls: [\"./pages.component.css\"]\n})\nexport class PagesComponent  {\n  @Input()\n  pages: any;\n  constructor( ) {\n  }\n\n}\n","import { components } from \"./components/index\";\r\nimport { MyJosnPipe } from \"./pipes/myJson.pipe\";\r\nimport { PreDefinePipe } from \"./pipes/pre-define.pipe\";\r\nimport { DataformatPipe } from \"./pipes/dataformat.pipe\";\r\nimport { field_types } from \"./components/fieldtypes\";\r\nexport {FIELD_TYPES}  from \"./components/fieldtypes\";\r\nexport const Lib_Components = [\r\n  ...components,\r\n  MyJosnPipe,\r\n  PreDefinePipe,\r\n  DataformatPipe,\r\n  ...field_types\r\n];\r\n\r\n","import { Action } from \"@ngrx/store\";\r\nexport enum BTActionTypes {\r\n  Fired = \"BTAction fired\",\r\n  Success = \"BTAction Success\",\r\n  Failure = \"BTAction Failure\"\r\n}\r\n\r\nexport class BTActionData {\r\n  action: any;\r\n  model: any;\r\n}\r\nexport class BTAction implements Action {\r\n  readonly type = BTActionTypes.Fired;\r\n  constructor(public payload: BTActionData) {}\r\n}\r\n\r\nexport class BTActionSuccess implements Action {\r\n  readonly type = BTActionTypes.Success;\r\n\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class BTActionFailure implements Action {\r\n  readonly type = BTActionTypes.Failure;\r\n\r\n  constructor(public payload: any) {}\r\n}\r\nexport type BTActionsUnion = BTAction | BTActionSuccess | BTActionFailure;\r\n","import { Action } from \"@ngrx/store\";\r\nexport enum PageActionTypes {\r\n  ChangeFired = \"Page Change Action fired\"\r\n}\r\n\r\nexport class PageAction implements Action {\r\n  readonly type = PageActionTypes.ChangeFired;\r\n  constructor(public payload: any) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, exhaustMap, map, tap } from \"rxjs/operators\";\r\nimport {\r\n  BTActionTypes,\r\n  BTAction,\r\n  BTActionSuccess,\r\n  BTActionFailure\r\n} from \"../actions/bt.actions\";\r\nimport { BTService } from \"../services/bt.service\";\r\n\r\n@Injectable()\r\nexport class BTEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private btService: BTService,\r\n    private router: Router\r\n  ) {}\r\n  @Effect()\r\n  btFired$ = this.actions$.pipe(\r\n    ofType<BTAction>(BTActionTypes.Fired),\r\n    map(x => {\r\n      console.log(`map`, x.payload);\r\n      return x.payload;\r\n    }),\r\n    exhaustMap((action: any) => {\r\n      const xx = this.btService.Fired(action).pipe(\r\n        map(data => {\r\n         return  new BTActionSuccess(data);\r\n        }),\r\n        catchError(error => {\r\n          console.error(error);\r\n          return of(new BTActionFailure(error));\r\n        })\r\n      );\r\n      console.log(`exhaustMap`, action, xx);\r\n      return xx;\r\n    })\r\n  );\r\n  @Effect({ dispatch: false })\r\n  btFiredSuccess$ = this.actions$.pipe(\r\n    ofType(BTActionTypes.Success),\r\n    tap((action: BTActionSuccess) => {\r\n      console.log(\"btFiredSuccess\", action.payload);\r\n      if (action.payload.url) { return this.router.navigate([action.payload.url]); }\r\n    }),\r\n    catchError(error => {\r\n      console.error(error);\r\n      return of({ error });\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  btFiredFailure$ = this.actions$.pipe(\r\n    ofType(BTActionTypes.Failure),\r\n    tap((error: BTActionFailure) => {\r\n      //  console.log(error.payload.url);\r\n      return this.router.navigate([error.payload.url]);\r\n    })\r\n  );\r\n\r\n  // @Effect({ dispatch: false })\r\n  // loginRedirect$ = this.actions$.pipe(\r\n  //   ofType(BTActionTypes.LoginRedirect, BTActionTypes.Logout),\r\n  //   tap(authed => {\r\n  //     console.log(\"**********\", authed);\r\n  //     this.router.navigate(['/auth/login']);\r\n  //   })\r\n  // );\r\n}\r\n","import { StoreModule } from \"@ngrx/store\";\r\nimport { reducers, metaReducers } from \"./reducers\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreRouterConnectingModule } from \"@ngrx/router-store\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { NgModule } from \"@angular/core\";\r\n// import { reducer } from \"./reducers/\";\r\nimport { BTEffects } from \"./effects/bt.effects\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    /**\r\n     * StoreModule.forRoot is imported once in the root module, accepting a reducer\r\n     * function or object map of reducer functions. If passed an object of\r\n     * reducers, combineReducers will be run creating your application\r\n     * meta-reducer. This returns all providers for an @ngrx/store\r\n     * based application.\r\n     */\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n    // StoreModule.forFeature(\"jsonformlib\", reducer),\r\n    /**\r\n     * @ngrx/router-store keeps router state up-to-date in the store.\r\n     */\r\n    StoreRouterConnectingModule.forRoot({\r\n      /*\r\n        They stateKey defines the name of the state used by the router-store reducer.\r\n        This matches the key defined in the map of reducers\r\n      */\r\n      stateKey: \"router\"\r\n    }),\r\n\r\n    /**\r\n     * Store devtools instrument the store retaining past versions of state\r\n     * and recalculating new states. This enables powerful time-travel\r\n     * debugging.\r\n     *\r\n     * To use the debugger, install the Redux Devtools extension for either\r\n     * Chrome or Firefox\r\n     *\r\n     * See: https://github.com/zalmoxisus/redux-devtools-extension\r\n     */\r\n    StoreDevtoolsModule.instrument({\r\n      name: \"JSON Form Lib Store DevTools\",\r\n      logOnly: true // ?? environment.production,\r\n    }),\r\n\r\n    /**\r\n     * EffectsModule.forRoot() is imported once in the root module and\r\n     * sets up the effects class to be initialized immediately when the\r\n     * application starts.\r\n     *\r\n     * See: https://github.com/ngrx/platform/blob/master/docs/effects/api.md#forroot\r\n     */\r\n    EffectsModule.forRoot([]),\r\n    EffectsModule.forFeature([BTEffects])\r\n\r\n    /**\r\n     * `provideDB` sets up @ngrx/db with the provided schema and makes the Database\r\n     * service available.\r\n     */\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class NgRxCoreModule {\r\n  constructor() {}\r\n}\r\n","import { BTActionTypes, BTActionsUnion } from \"../actions/bt.actions\";\r\n\r\nexport interface BTState {\r\n  id: string;\r\n  model ?: any;\r\n  error: string | null;\r\n  pending: boolean;\r\n}\r\n\r\nexport const initialState: BTState = {\r\n  id: null,\r\n  error: null,\r\n  pending: false\r\n};\r\nexport function btreducer(state: BTState = initialState, action: BTActionsUnion): BTState {\r\n  switch (action.type) {\r\n    case BTActionTypes.Fired: {\r\n      const x = {\r\n        ...state,\r\n        id: action.payload.action.id,\r\n        model: action.payload.model,\r\n        error: null,\r\n        pending: true\r\n      };\r\n      return x;\r\n    }\r\n    case BTActionTypes.Success: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        pending: false\r\n      };\r\n    }\r\n    case BTActionTypes.Failure: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","\r\nimport * as fromRouter from \"@ngrx/router-store\";\r\nimport {\r\n  ActionReducerMap,\r\n  ActionReducer,\r\n  MetaReducer,\r\n  createFeatureSelector,\r\n  createSelector,\r\n  select,\r\n  MemoizedSelector\r\n} from \"@ngrx/store\";\r\nimport { BTState, btreducer } from \"./bt.reducer\";\r\nexport { BTState, btreducer } from \"./bt.reducer\";\r\nimport { PageState, pagereducer } from './page.reduce';\r\n\r\nexport interface State {\r\n  // layout: fromLayout.State;\r\n  page: PageState;\r\n  button: BTState;\r\n  router: fromRouter.RouterReducerState;\r\n}\r\n\r\nexport function getButtonState(): MemoizedSelector<State, BTState> {\r\n  const featureSel = createFeatureSelector<State, BTState>(\"button\");\r\n  return createSelector(featureSel, (state: BTState) => state);\r\n}\r\nexport function getButtonStateAsync(store) {\r\n  return store.pipe(select(getButtonState()));\r\n}\r\n\r\n/**\r\n * Our state is composed of a map of action reducer functions.\r\n * These reducer functions are called with each dispatched action\r\n * and the current or initial state and return a new immutable state.\r\n */\r\nexport const reducers: ActionReducerMap<State> = {\r\n  // layout: fromLayout.reducer,\r\n  page: pagereducer,\r\n  button: btreducer,\r\n  router: fromRouter.routerReducer\r\n};\r\n\r\n// console.log all actions\r\nexport function logger(reducer: ActionReducer<State>): ActionReducer<State> {\r\n  return function (state: State, action: any): State {\r\n    // console.log('state', state);\r\n    // console.log('action', action);\r\n\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\nexport const metaReducers: MetaReducer<State>[] = false // environment.production\r\n  ? [logger]\r\n  : [];\r\n","import { PageAction, PageActionTypes } from './../actions/page.actions';\r\nexport interface PageState {\r\n    payload: any;\r\n}\r\n\r\nexport function pagereducer(state: PageState, action: PageAction): PageState {\r\n    switch (action.type) {\r\n        case PageActionTypes.ChangeFired:\r\n            const x = {\r\n                ...state,\r\n                payload: action.payload\r\n            };\r\n            return x;\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { Observable, of } from \"rxjs\";\r\n\r\nexport class BTService {\r\n  Fired(action): Observable<any> {\r\n    console.log(`Wrong Fired:`, action);\r\n    switch (action.id) {\r\n      case 'myorder':\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return of(action);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\nimport { DatePipe } from \"@angular/common\";\r\n@Pipe({\r\n  name: \"dateformat\"\r\n})\r\nexport class DataformatPipe implements PipeTransform {\r\n\r\n  constructor(private datepipe: DatePipe) {}\r\n\r\n  transform(value: any, ...args: Array<any>) {\r\n    if (value[0].match(/Date/)) {\r\n      return this.datepipe.transform(value[1], \"yyyy-MM-dd\");\r\n    }\r\n\r\n    return value;\r\n  }\r\n  //   UI: any;\r\n  // FindValue(value: string, key): any {\r\n  //   const a = this.UI.LookupKeys.find(c => c === key);\r\n  //   if (!a) {\r\n  //     return value;\r\n  //   }\r\n  //   const b = this.UI.Displays.find(c => c.key === key);\r\n  //   if (value === undefined) {\r\n  //     return \"\";\r\n  //   }\r\n  //   const d = b.templateOptions.options.find(c => c.value === value.toString());\r\n\r\n  //   return d ? { Key: value, Value: d.label } : value;\r\n  // }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"myjson\"\r\n})\r\nexport class MyJosnPipe implements PipeTransform {\r\n  constructor() {}\r\n\r\n  // tslint:disable-next-line:typedef\r\n  transform(value: any, ...args: Array<any>) {\r\n    return this.Define(value);\r\n  }\r\n  FindKeys(v): string {\r\n    return JSON.stringify(\r\n      v,\r\n      (key, value) => {\r\n        if (\r\n          [\r\n            \"model\",\r\n            \"formControl\",\r\n            \"id\",\r\n            \"wrappers\",\r\n            \"type\",\r\n            \"className\",\r\n            \"validators\",\r\n            \"path\",\r\n            \"focus\",\r\n            \"required\",\r\n            \"templateOptions\",\r\n            \"fieldGroupClassName\",\r\n            \"datakey\",\r\n            \"dataKey\",\r\n            \"_formlyKeyPath\",\r\n            \"hideExpression\",\r\n            \"defaultValue\",\r\n            \"options\",\r\n            \"data\",\r\n            \"descirption\",\r\n            \"tables\",\r\n            \"actions\",\r\n            \"hide\",\r\n            \"fields\",\r\n            \"title\"\r\n          ].find(c => c === key)\r\n        ) {\r\n          return ;\r\n        }\r\n\r\n        return value;\r\n      },\r\n      4\r\n    );\r\n  }\r\n  Define(value): string {\r\n    // Demo: Circular reference\r\n    // Note: cache should not be re-used by repeated calls to JSON.stringify.\r\n    const cache = new Map();\r\n\r\n    return JSON.stringify(\r\n      value,\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      (key, value) => {\r\n        if ([\"model\", \"formControl\", \"id\", \"wrappers\"].find(c => c === key)) {\r\n          return;\r\n        }\r\n        if (typeof value === \"object\" && value !== null) {\r\n          if (cache.get(value)) {\r\n            // Circular reference found, discard key\r\n             // console.log(\"value:\", value);\r\n            return;\r\n          }\r\n          // Store value in our map\r\n          cache.set(value, true);\r\n        }\r\n\r\n        return value;\r\n      },\r\n      2\r\n    );\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'preDefine'\n})\nexport class PreDefinePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n","import { IDefCase, IDefAppIndex } from \"../Interface\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { forkJoin, Observable, of, merge } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  switchMap,\r\n  map,\r\n  zip,\r\n  combineAll,\r\n  tap,\r\n  catchError\r\n} from \"rxjs/operators\";\r\nimport { IUser } from \"../interface/Def/IUser\";\r\n\r\n@Injectable()\r\nexport class AppIndexService {\r\n  appIndex$: Observable<any>;\r\n  appIndex: IDefAppIndex;\r\n  Libs: any[];\r\n  fieldpreDefineLib: any[] = [];\r\n  fieldGroup: any[] = [];\r\n  constructor(private http: HttpClient) {}\r\n\r\n  LoadIndex(indexPath: string): Observable<any> {\r\n    if (!this.appIndex$) {\r\n      this.appIndex$ = this.http.get<IDefAppIndex>(indexPath);\r\n      this.appIndex$.subscribe(c => {\r\n        this.appIndex = c;\r\n      });\r\n    }\r\n    return this.appIndex$;\r\n  }\r\n\r\n  get Menus$(): Observable<any> {\r\n    const menu$ = this.appIndex ? of(this.appIndex) : this.appIndex$;\r\n    return menu$.pipe(\r\n      map(c => {\r\n        const menu = [];\r\n        const value = this.CurrentUser\r\n          ? this.CurrentUser.domain\r\n          : this.appIndex.Resources.defaultDomin;\r\n        value.forEach(cc =>\r\n          menu.push(...this.appIndex.Resources[cc].map(ccc => ccc.menu))\r\n        );\r\n        return menu.filter(x => x);\r\n      })\r\n    );\r\n  }\r\n  getFieldGroup(fg) {\r\n    let x = this.fieldGroup\r\n      ? this.fieldGroup.find(c => c.libId === fg.libId)\r\n      : null;\r\n\r\n    x = x ? x[fg.libId] : null;\r\n    if (fg.label && x) {\r\n      x[0][0].label = fg.label;\r\n    }\r\n    console.log(x);\r\n    return x;\r\n  }\r\n\r\n  getPredefine(key) {\r\n    return this.fieldpreDefineLib.find(c => c.key === key);\r\n  }\r\n  get CurrentUser(): IUser {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    } catch (error) {\r\n      return undefined;\r\n    }\r\n  }\r\n  set CurrentUser(value: IUser) {\r\n    if (!value) {\r\n      localStorage.removeItem(\"currentUser\");\r\n    } else {\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(value));\r\n    }\r\n  }\r\n\r\n  get Libs$(): Observable<any> {\r\n    if (this.Libs) {\r\n      return of(this.Libs);\r\n    }\r\n    return this.appIndex$.pipe(\r\n      switchMap(c => {\r\n        if (c.Libs) {\r\n          const x = Object.keys(c.Libs).map(lib => this.LoadLib(lib));\r\n          return merge(x).pipe(\r\n            combineAll(),\r\n            map(cc => {\r\n              this.Libs = cc;\r\n              this.fieldpreDefineLib = this.getLib(\"fieldpreDefine\");\r\n              this.fieldGroup = this.getLib(\"fieldGroup\");\r\n              return cc;\r\n            })\r\n          );\r\n        }\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n  LoadLib(key): Observable<any> {\r\n    try {\r\n      if (this.appIndex) {\r\n        const uidef = this.appIndex.Libs ? this.appIndex.Libs[key] : null;\r\n        if (uidef) {\r\n          if (uidef.length > 0) {\r\n            const x = uidef.path ? uidef.path : key;\r\n            const path = this.appIndex.basepath.libpath + x;\r\n            return forkJoin(\r\n              uidef.map(cc => this.http.get<Array<IDefCase>>(`${path}/${cc}`))\r\n            ).pipe(\r\n              map(c => {\r\n                return { key: key, data: c };\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  getLib(key): any[] {\r\n    if (!this.Libs) {\r\n      return undefined;\r\n    }\r\n    const x = this.Libs.filter(c => c.key === key).map(c => {\r\n      return c.data.flat();\r\n    })[0];\r\n    console.log(\"getLib\", key);\r\n    return x;\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getall(url): Observable<any> {\r\n    return this.http.get(url);\r\n  }\r\n  getbyid(url, id): Observable<any> {\r\n    return this.http.get(url);\r\n  }\r\n  post(url, data): Observable<any> {\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  put(url, data): Observable<any> {\r\n    return this.http.put(url, data);\r\n  }\r\n\r\n  delete(url, data): Observable<any> {\r\n    return this.http.put(url, data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { FormlyFieldConfig } from \"@ngx-formly/core\";\r\nimport { FIELD_VALIDATION } from \"../Interface\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { AppIndexService } from \"./appIndex.service\";\r\n\r\nconst coldefs = {\r\n  1: \"col-sm-12\",\r\n  2: \"col-sm-6\",\r\n  3: \"col-sm-4\",\r\n  4: \"col-sm-3\",\r\n  5: \"col-sm-2\",\r\n  6: \"col-sm-2\"\r\n};\r\nfunction findRowCss(rowlen, cellClassName: string): string {\r\n  cellClassName = isNullOrUndefined(cellClassName) ? \"\" : cellClassName;\r\n  return cellClassName.indexOf(\"col\") === -1\r\n    ? cellClassName + \" \" + (coldefs[rowlen] || \"col-sm-1\")\r\n    : cellClassName;\r\n}\r\n\r\n@Injectable()\r\nexport class FieldService {\r\n  validator: any;\r\n\r\n  constructor(@Inject(FIELD_VALIDATION) validation, private indexservice: AppIndexService) {\r\n    this.validator = { validation: validation };\r\n    console.log(this.validator );\r\n    \r\n  }\r\n  Create(cell: any, rowLength: number): FormlyFieldConfig {\r\n    try {\r\n      if (cell.template) {\r\n        return cell;\r\n      }\r\n      cell.key = cell.type === \"info\" ? cell.type : cell.key;\r\n      const field = this.CreateFormlyField(cell);\r\n      field.className = findRowCss(rowLength, cell.className);\r\n      this.setupFieldByType(field);\r\n      this.overwriteFields(field, cell);\r\n      return field;\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  // check prefedine UI, if not return orginial cell definitation.\r\n  CreateFormlyField(field): FormlyFieldConfig {\r\n    const predefine  = this.indexservice.getPredefine(field.key);\r\n  return predefine\r\n      ? JSON.parse(JSON.stringify(predefine))\r\n      : {\r\n          key: field.key,\r\n          type: field.type,\r\n          templateOptions: {\r\n            label: field.label,\r\n            options: field.options,\r\n            inline: field.inline\r\n          }\r\n        };\r\n  }\r\n  setupFieldByType(field): FormlyFieldConfig {\r\n    field.type = field.type || \"input\";\r\n    switch (field.type) {\r\n      case \"select\":\r\n        field.defaultValue = -1;\r\n        break;\r\n      case \"date\":\r\n        field.type = \"input\";\r\n        field.templateOptions.type = \"date\";\r\n        break;\r\n      case \"checkbox\":\r\n        field.defaultValue = false;\r\n        field.className = field.className + \" text-left\";\r\n        break;\r\n      case \"textarea\":\r\n        field.templateOptions.rows = 6;\r\n        field.templateOptions.cols = 80;\r\n        break;\r\n      case \"radio\":\r\n        break;\r\n      case \"readonly\":\r\n        break;\r\n      default:\r\n        if (!field.templateOptions.label) {\r\n          field.templateOptions.label = field.key;\r\n        }\r\n        break;\r\n    }\r\n    return field;\r\n  }\r\n  addValidaation(field: FormlyFieldConfig): void {\r\n    if (field.templateOptions.required) {\r\n      field.validation = {\r\n        messages: {\r\n          required: `you need add $[field.templateOptions.label]`\r\n        }\r\n      };\r\n    }\r\n  }\r\n  overwriteFields(field: FormlyFieldConfig, cell): void {\r\n    if (cell.key === null) {\r\n      return;\r\n    }\r\n\r\n    field.templateOptions.label = cell.label || field.templateOptions.label;\r\n    field.defaultValue = cell.defaultValue || field.defaultValue;\r\n    field.hideExpression = field.hideExpression || cell.hideExpression;\r\n    field.expressionProperties =\r\n      cell.expressionProperties || field.expressionProperties;\r\n    field.lifecycle = field.lifecycle || cell.lifecycle;\r\n    if (cell.required === true) {\r\n      field.templateOptions.required = true;\r\n    }\r\n\r\n    field.validators = this.validator;\r\n  }\r\n}\r\n","import { startWith, takeUntil, tap, map } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IDynamicField } from \"../Interface\";\r\nimport { FormlyFieldConfig } from \"@ngx-formly/core\";\r\nimport { Subject, Observable, of } from \"rxjs\";\r\nimport { FieldService } from \"./field.service\";\r\nimport { AppIndexService } from \"./appIndex.service\";\r\n\r\n@Injectable()\r\nexport class FormService {\r\n  constructor(\r\n    public fieldService: FieldService,\r\n    private indexservice: AppIndexService\r\n  ) {}\r\n  RowsMaptoFields(Rows: any[], model: any): Observable<Array<any>> {\r\n    return this.indexservice.Libs$.pipe(\r\n      map(\r\n        () => {\r\n          const result = this.FillPage(Rows).map(fieldDef => {\r\n            const xx = this.processfiedDef(fieldDef);\r\n            switch (xx.type) {\r\n              case \"repeat\":\r\n                model[xx.key] = xx.model;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            return xx;\r\n          });\r\n          return result;\r\n        },\r\n        e => {\r\n          console.log(e);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  FillPage(Rows: any[]): Array<any> {\r\n    try {\r\n      let result: any = Rows.map(fg => {\r\n        if (fg) {\r\n          if (fg.libId) {\r\n            const x = this.indexservice.getFieldGroup(fg);\r\n            return  x;\r\n          } else {\r\n            return [fg];\r\n          }\r\n        }\r\n      });\r\n      result = result.flat();\r\n      return result ;\r\n    } catch (error) {\r\n      console.log(\"error\", error, Rows);\r\n    }\r\n  }\r\n\r\n  processfiedDef(fieldDef: any): FormlyFieldConfig | any {\r\n    switch (fieldDef.type) {\r\n      case \"repeat\":\r\n      case \"table\":\r\n        fieldDef.fieldArray.fieldGroup = fieldDef.fieldArray.Rows.map(c =>\r\n          this.processfiedDef(c)\r\n        );\r\n        return fieldDef;\r\n      default:\r\n        return {\r\n          fieldGroupClassName: fieldDef.fieldGroupClassName\r\n            ? fieldDef.fieldGroupClassName\r\n            : \"row\",\r\n          hideExpression: fieldDef.hideExpression,\r\n          fieldGroup: fieldDef.Rows\r\n            ? fieldDef.Rows.map(c => this.processfiedDef(c))\r\n            : this.processField(fieldDef)\r\n        };\r\n    }\r\n  }\r\n\r\n  CreateField(field: FormlyFieldConfig, rowlength: number): FormlyFieldConfig {\r\n    if (field.lifecycle) {\r\n      field.lifecycle = this.addlifeCyle(field.lifecycle);\r\n    }\r\n    return this.fieldService.Create(field, rowlength);\r\n  }\r\n\r\n  processField(\r\n    fieldDef: IDynamicField[]\r\n  ): FormlyFieldConfig[] | FormlyFieldConfig {\r\n    try {\r\n      const len = fieldDef.length;\r\n      if (!len) {\r\n        return [this.CreateField(fieldDef as FormlyFieldConfig, len)];\r\n      }\r\n      return fieldDef.map(f => this.CreateField(f, len));\r\n    } catch (error) {\r\n      console.error(error, fieldDef);\r\n    }\r\n  }\r\n  addlifeCyle(cycle) {\r\n    return {\r\n      onInit: (form, field) => {\r\n        try {\r\n          form\r\n            .get(cycle.depend_key)\r\n            .valueChanges.pipe(\r\n              takeUntil(new Subject<void>()),\r\n              startWith(form.get(cycle.depend_key).value),\r\n              tap(fieldId => {\r\n                field.hide = fieldId !== cycle.value;\r\n              })\r\n            )\r\n            .subscribe();\r\n        } catch {\r\n          console.error(cycle.depend_key);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { PageService } from \"./page.service\";\r\nimport { FormService } from \"./form.service\";\r\nimport { FieldService } from \"./field.service\";\r\nimport { AppIndexService } from \"./appIndex.service\";\r\nimport { DataService } from \"./data.service\";\r\nexport { PageService } from \"./page.service\";\r\nexport { FormService } from \"./form.service\";\r\nexport { FieldService } from \"./field.service\";\r\nexport { AppIndexService } from \"./appIndex.service\";\r\nexport { DataService } from \"./data.service\";\r\n\r\nexport const JSON_SERVICES = [\r\n  AppIndexService,\r\n  PageService,\r\n  FormService,\r\n  FieldService,\r\n  DataService\r\n];\r\n","import { PageAction } from \"../ngrxcore/actions/page.actions\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, forkJoin, of } from \"rxjs\";\r\nimport { map, switchMap, tap } from \"rxjs/operators\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AppIndexService } from \"./appIndex.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { IActivePage } from \"../interface/Def/IActivePage\";\r\nimport { PageState } from \"../ngrxcore/reducers/page.reduce\";\r\n\r\nconst defaultCase = {\r\n  defCase: {\r\n    title: \" title\",\r\n    pages: [\r\n      {\r\n        type: \"form\",\r\n        Rows: [\r\n          [\r\n            {\r\n              key: \"key1\",\r\n              label: \"first\"\r\n            }\r\n          ]\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  model: {}\r\n};\r\n@Injectable()\r\n// handle broadcasting page update\r\nexport class PageService {\r\n  _currentPage: IActivePage;\r\n  get DefaultCase() {\r\n    const x = localStorage.getItem(\"page\");\r\n    return x ? JSON.parse(x) : defaultCase;\r\n  }\r\n  set CurrentPage(value: IActivePage) {\r\n    this._currentPage = value || this.DefaultCase;\r\n    this._currentPage.model = this._currentPage.model || {};\r\n    if (value) {\r\n      if (value.src === \"CaseComponent\") {\r\n        this.store.dispatch(new PageAction(this._currentPage));\r\n      }\r\n    }\r\n  }\r\n  get CurrentModel() {\r\n    const x = this._currentPage ? this._currentPage.model : {};\r\n    return x || {};\r\n  }\r\n  constructor(\r\n    private appIndex: AppIndexService,\r\n    private http: HttpClient,\r\n    private store: Store<PageState>\r\n  ) {\r\n    this.CurrentPage = null;\r\n  }\r\n  get _appIndex() {\r\n    return this.appIndex.appIndex;\r\n  }\r\n  display(form): boolean {\r\n    if (!form) {\r\n      return false;\r\n    }\r\n    return form.hideExpression\r\n      ? !Function(\r\n          \"model\",\r\n          `\r\n           return model? ${form.hideExpression}: false; `\r\n        )(this._currentPage.model)\r\n      : true;\r\n  }\r\n  getPath(def, dom, type): string {\r\n    try {\r\n      switch (type) {\r\n        case \"uiDefPath\":\r\n          return `${this._appIndex.basepath.uipath}/${dom}/${\r\n            def.paths.uiDefPath\r\n          }`;\r\n        case \"iniapi\":\r\n          return def.paths.iniapi\r\n            ? `${this._appIndex.basepath.datapath}/${dom}/${def.paths.iniapi}`\r\n            : null;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n  LoadCase(dom, caseID): Observable<any> {\r\n    return this.appIndex.appIndex$.pipe(\r\n      map(() => {\r\n        let x = this._appIndex.Resources[dom].find(c => c.caseID === caseID);\r\n        if (!x) {\r\n          let pagID = \"pagenotfound\";\r\n          if (caseID === \"logout\") {\r\n            pagID = \"login\";\r\n            this.appIndex.CurrentUser = null;\r\n          }\r\n          x = this._appIndex.Resources[dom].find(c => c.caseID === pagID);\r\n        }\r\n        return x;\r\n      }),\r\n      map((def: any) => {\r\n        if (def) {\r\n          if (def.paths) {\r\n            const urls = [this.getPath(def, dom, \"uiDefPath\")];\r\n            if (def.paths.iniapi) {\r\n              urls.push(this.getPath(def, dom, \"iniapi\"));\r\n            }\r\n            const xx = forkJoin(urls.map(url => this.http.get<any>(url)));\r\n            return xx;\r\n          } else {\r\n            console.error(def, \"no paths fields defined\");\r\n          }\r\n        } else {\r\n          return of([]);\r\n        }\r\n      }),\r\n      switchMap(c => {\r\n        return c;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport * as Mat from \"@angular/material\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgRxCoreModule } from \"./ngrxcore/ngrxcore.module\";\r\n \r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    Mat.MatTooltipModule,\r\n    Mat.MatTabsModule,\r\n    Mat.MatTableModule,\r\n    Mat.MatIconModule,\r\n    Mat.MatButtonModule,\r\n    Mat.MatToolbarModule,\r\n    Mat.MatListModule,\r\n    Mat.MatInputModule,\r\n    Mat.MatStepperModule,\r\n    Mat.MatCardModule,\r\n    Mat.MatExpansionModule,\r\n    RouterModule,\r\n    NgRxCoreModule,\r\n    Mat.MatSidenavModule,\r\n    Mat.MatListModule\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n","import { FIELD_VALIDATION } from \"./lib/Interface\";\r\n\r\n/*\r\n * Public API Surface of jsonformlib\r\n */\r\n\r\nexport { AppIndexService } from \"./lib/services/appIndex.service\";\r\nexport { DataService } from \"./lib/services/data.service\";\r\nexport { SharedModule } from \"./lib/shared.module\";\r\nexport { IDefCase } from \"./lib/Interface\";\r\nexport { MyJosnPipe } from \"./lib/pipes/myJson.pipe\";\r\nexport {\r\n  State,\r\n  BTState,\r\n  getButtonState,\r\n  getButtonStateAsync\r\n} from \"./lib/ngrxcore/reducers\";\r\n\r\nexport {\r\n  BTAction,\r\n  BTActionFailure,\r\n  BTActionSuccess\r\n} from \"./lib/ngrxcore/actions/bt.actions\";\r\n\r\nexport { BTService } from \"./lib/ngrxcore/services/bt.service\";\r\nexport { NgRxCoreModule } from \"./lib/ngrxcore/ngrxcore.module\";\r\nexport {Lib_Components} from './lib/jsonform.module';\r\nexport {FIELD_TYPES} from './lib/components/fieldtypes';\r\nexport {JSON_SERVICES} from './lib/services';\r\nexport {FIELD_VALIDATION}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./restaurant/$$_lazy_route_resource lazy recursive\";","import { Route } from '@angular/router';\r\nimport { CaseComponent } from 'projects/jsonformlib/src/lib/components/case/case.component';\r\nimport { AuthGuard } from './services/auth-guard.service';\r\n\r\nexport const routes: Route[] = [\r\n    { path: '', redirectTo: 'public/fieldtypes', pathMatch: 'full' },\r\n    { path: '**', redirectTo: 'public/fieldtypes', pathMatch: 'full' },\r\n    { path: 'admin/:id', component: CaseComponent ,canActivate: [AuthGuard]},\r\n    { path: 'public/:id', component: CaseComponent },\r\n    { path: 'restaurant/:id', component: CaseComponent  } \r\n];\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { AppIndexService } from 'projects/jsonformlib/src/public_api';\nimport { environment } from 'spa/environments/environment';\nimport { Observable } from 'rxjs';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  Index$: Observable<any[]>;\n  user: Observable<any>;\n  booksList = [];\n  booksOb: Observable<any[]>;\n\n  constructor(private appIndex: AppIndexService,\n    private userService: UserService,\n     ) {\n    appIndex.LoadIndex(environment.path)\n    .subscribe(\n    );\n  }\n  \n  ngOnInit() {\n    // this.Index$.subscribe((index: any[]) => {\n    //   this.booksList = [];\n    //   index.forEach((book: any) => {\n    //     book.user.get().then(data => {\n    //       const userData = data.data();\n    //       const shallowCopy = { ...book, ...userData };\n    //       this.booksList.push(shallowCopy);\n    //     });\n    //   });\n    // });\n  }\n  get User() {\n    return this.appIndex.CurrentUser;\n  }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { routes } from './Routes';\r\nimport { SharedModule, Lib_Components, FIELD_TYPES, JSON_SERVICES } from \"projects/jsonformlib/src/public_api\";\r\nimport { environment } from '../environments/environment';\r\nimport { ValidationService } from './services/validation.service';\r\nimport { myBTService } from './services/mybt.service';\r\nimport { AuthGuard } from './services/auth-guard.service';\r\nimport { UserService } from './services/user.service';\r\nimport { FIELD_VALIDATION } from 'projects/jsonformlib/src/lib/Interface';\r\nimport { FormlyModule, ConfigOption } from '@ngx-formly/core';\r\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...Lib_Components,\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forRoot(routes, { useHash: true, enableTracing: false }),\r\n    FormlyModule,\r\n    FormlyBootstrapModule,\r\n    FormlyModule.forRoot(ValidationService.CreateFormlyConfig({ types:FIELD_TYPES}))\r\n  ],\r\n  providers: [\r\n    ...JSON_SERVICES,\r\n     myBTService.Service,\r\n     UserService,\r\n     AuthGuard,\r\n     {\r\n       provide : FIELD_VALIDATION, useValue: [environment.project]\r\n     }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {\r\n  constructor() { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map, take, tap } from \"rxjs/operators\";\r\nimport { Store, select, MemoizedSelector } from \"@ngrx/store\";\r\nimport {\r\n  State,\r\n  BTState,\r\n  getButtonState,\r\n  AppIndexService,\r\n  BTActionFailure\r\n} from \"projects/jsonformlib/src/public_api\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.auth.user.pipe(\r\n      take(1),\r\n      map(user => !!user),\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          console.log('access denied')\r\n          this.router.navigate(['/login']);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  // btState: MemoizedSelector<State, BTState>;\r\n  // constructor(\r\n  //   private store: Store<BTState>,\r\n  //   private appIndex: AppIndexService\r\n  // ) {\r\n  //   this.btState = getButtonState();\r\n  // }\r\n  // canActivate(): Observable<boolean> {\r\n  //   if (this.appIndex.CurrentUser) {\r\n  //     return of(true);\r\n  //   }\r\n  //   this.store.select(s => s).pipe(\r\n  //     map(btstate => {\r\n  //       if (!btstate) {\r\n  //         this.store.dispatch(\r\n  //           new BTActionFailure({\r\n  //             action: \"login required\",\r\n  //             url: \"public/login\"\r\n  //           })\r\n  //         );\r\n  //         return false;\r\n  //       }\r\n  //       return !btstate.error;\r\n  //     }),\r\n  //     take(1)\r\n  //   );\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  user: any;\r\n}\r\n","import { reducers } from './../../../projects/jsonformlib/src/lib/ngrxcore/reducers';\r\nimport { PageService } from 'projects/jsonformlib/src/lib/services/page.service';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, of, empty } from \"rxjs\";\r\nimport { AppIndexService } from \"projects/jsonformlib/src/lib/services/appIndex.service\";\r\nimport { BTService } from \"projects/jsonformlib/src/lib/ngrxcore/services/bt.service\";\r\n\r\n@Injectable()\r\nexport class myBTService extends BTService {\r\n  static Service = {\r\n    provide: BTService,\r\n    useClass: myBTService\r\n  };\r\n\r\n  constructor(private appIndex: AppIndexService,\r\n    private service: PageService) {\r\n    super();\r\n    \r\n  }\r\n\r\n  Fired(data: any): Observable<any> {\r\n    console.log(\"myBTService Fired\");\r\n    let x: any = {};\r\n    switch (data.action.id) {\r\n      case 'myorder':\r\n        console.log(this.service.CurrentModel);\r\n        let sum = 0;\r\n        this.service.CurrentModel[data.action.id]\r\n          .forEach(c => {\r\n            sum += c.Qty * c.price;\r\n          })\r\n         this.service._currentPage.model.total = sum;\r\n        break;\r\n      case \"login\":\r\n        x = this.login(data);\r\n        break;\r\n      case \"logout\":\r\n        x = this.logout(data);\r\n        break;\r\n      default:\r\n        x = { model: data.model, url: data.action.redirect };\r\n        break;\r\n    }\r\n    return x.url ? of(x) : of(data);\r\n  }\r\n  SubmitReferral(data) {\r\n    const x = data.model.referralSourceTypeId > 0;\r\n    return x ? { url: data.action.redirect[\"success\"] } : {};\r\n  }\r\n\r\n  login(data): any {\r\n    const r = data.model.username === \"test\" ? \"success\" : \"fail\";\r\n    if (r === \"success\") {\r\n      this.appIndex.CurrentUser = {\r\n        name: data.model.username,\r\n        domain: [\"eionline\"]\r\n      };\r\n    }\r\n    return { model: data.model.username, url: data.action.redirect[r] };\r\n  }\r\n  ReferralProcess(data): any {\r\n    return { model: data.model, url: data.action.redirect[data.model.result] };\r\n  }\r\n\r\n  logout(data) {\r\n    this.appIndex.CurrentUser = undefined;\r\n    return { url: data.action.redirect };\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    getReferenceUser(): any{\r\n        return {};\r\n    }\r\n}","import { FormControl, ValidationErrors } from \"@angular/forms\";\r\nimport { FormlyFieldConfig, ConfigOption } from \"@ngx-formly/core\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { IProjectConfig } from \"projects/jsonformlib/src/lib/interface/Def/IProject.Config\";\r\n\r\nfunction PatternValidator(control: FormControl, pattern: RegExp): boolean {\r\n  return control.value && control.value.match(pattern);\r\n}\r\nfunction DifferenceInDays(firstDate, secondDate) {\r\n  return Math.round(\r\n    (secondDate.getTime() - firstDate.getTime()) / (1000 * 60 * 60 * 24)\r\n  );\r\n}\r\n\r\nexport class ValidationService {\r\n  static projectConfig: IProjectConfig = {\r\n    name : environment.project,\r\n    field_validation: [environment.project],\r\n    valiationConfig: {\r\n      validators: [\r\n        { name: environment.project, validation: ValidationService.eionlineValidator }\r\n      ],\r\n      validationMessages: [\r\n        {\r\n          name: environment.project,\r\n          message: ValidationService.getValidatorErrorMessage\r\n        },\r\n        { name: \"required\", message: \"This field is required1\" }\r\n      ]\r\n    }\r\n  };\r\n  static CreateFormlyConfig(value): ConfigOption {\r\n\r\n    return {...ValidationService.projectConfig.valiationConfig, ...value }\r\n  }\r\n  static ErrorValidateMessage = {};\r\n  static getValidatorErrorMessage(code): string {\r\n    return ValidationService.ErrorValidateMessage[code];\r\n  }\r\n  static eionlineValidator(\r\n    control: FormControl,\r\n    field: FormlyFieldConfig\r\n  ): ValidationErrors {\r\n    let x = false;\r\n    switch (field.key) {\r\n      case \"DOB\":\r\n        x = true;\r\n        if (control.value) {\r\n          const d = DifferenceInDays(new Date(control.value), new Date());\r\n          x = d < 1098;\r\n        }\r\n        break;\r\n      case \"username\":\r\n        x = control.value === \"test\";\r\n        break;\r\n      case \"password\":\r\n        // {6,100}           - Assert password is between 6 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        x = PatternValidator(\r\n          control,\r\n          /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/\r\n        );\r\n        break;\r\n      case \"email\":\r\n        x = PatternValidator(\r\n          control,\r\n          /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n        );\r\n        break;\r\n      case \"creditCard\":\r\n        x = PatternValidator(\r\n          control,\r\n          /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/\r\n        );\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n    return x ? null : { eionline: field.key };\r\n  }\r\n}\r\n","import { IEnvironment } from \"./Ienvironment\";\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment   = {\n  production: false,\n  path: \"/assets/AppResources/index.json\",\n  project:\"restaurant\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { IEnvironment } from \"./Ienvironment\";\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment :IEnvironment  = {\n  production: false,\n  firebase:  {\n    apiKey: \"AIzaSyClbO56bewOcN44T1AqtDLfdxdBEEi1r6M\",\n    authDomain: \"jsonbasedspa.firebaseapp.com\",\n    databaseURL: \"https://jsonbasedspa.firebaseio.com/\",\n    projectId: \"jsonbasedspa\",\n    storageBucket: \"jsonbasedspa.appspot.com\",\n    messagingSenderId: \"935464933653\"\n  },\n  path: \"/assets/AppResources/index.json\",\n  project:\"spa\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n"],"sourceRoot":""}